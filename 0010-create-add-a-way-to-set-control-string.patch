diff --git a/targetcli/ui_backstore.py b/targetcli/ui_backstore.py
index 3838d02..b60eba5 100644
--- a/targetcli/ui_backstore.py
+++ b/targetcli/ui_backstore.py
@@ -577,7 +577,7 @@ class UIUserBackedBackstore(UIBackstore):
             print()
 
     def ui_command_create(self, name, size, cfgstring, wwn=None,
-                          hw_max_sectors=None):
+                          hw_max_sectors=None, control=None):
         '''
         Creates a User-backed storage object.
 
@@ -602,7 +602,7 @@ class UIUserBackedBackstore(UIBackstore):
             raise ExecutionError("cfgstring invalid: %s" % errmsg)
 
         so = UserBackedStorageObject(name, size=size, config=config, wwn=wwn,
-                                     hw_max_sectors=hw_max_sectors)
+                                     hw_max_sectors=hw_max_sectors, control=control)
         ui_so = UIUserBackedStorageObject(so, self)
         self.shell.log.info("Created user-backed storage object %s size %d."
                             % (name, size))
@@ -633,6 +633,7 @@ class UIStorageObject(UIRTSLibNode):
         'fabric_max_sectors': ('number', 'Maximum number of sectors the fabric can transfer at once.'),
         'hw_block_size': ('number', 'Hardware block size in bytes.'),
         'hw_max_sectors': ('number', 'Maximum number of sectors the hardware can transfer at once.'),
+        'control': ('string', 'Comma separated string of control=value tuples that will be passed to kernel control file.'),
         'hw_pi_prot_type': ('number', 'If non-zero, DIF protection is enabled on the underlying hardware.'),
         'hw_queue_depth': ('number', 'Hardware queue depth.'),
         'is_nonrot': ('number', 'If set to 1, the backstore is a non rotational device.'),
